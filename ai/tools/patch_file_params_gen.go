// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package tools

import "encoding/json"
import "fmt"

type PatchFileParamsJson struct {
	// Unified Diff形式のパッチ（ファイルパス・行レンジ・コンテキストを含む）
	Patch string `json:"patch" yaml:"patch" mapstructure:"patch"`

	// 編集対象ファイルのパス
	Path string `json:"path" yaml:"path" mapstructure:"path"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *PatchFileParamsJson) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	if _, ok := raw["patch"]; raw != nil && !ok {
		return fmt.Errorf("field patch in PatchFileParamsJson: required")
	}
	if _, ok := raw["path"]; raw != nil && !ok {
		return fmt.Errorf("field path in PatchFileParamsJson: required")
	}
	type Plain PatchFileParamsJson
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	*j = PatchFileParamsJson(plain)
	return nil
}
