// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package tools

import "encoding/json"
import "fmt"

type WriteFileParamsJson struct {
	// ファイルに書き込む内容
	Content string `json:"content" yaml:"content" mapstructure:"content"`

	// 作成するファイルのパス
	Path string `json:"path" yaml:"path" mapstructure:"path"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *WriteFileParamsJson) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	if _, ok := raw["content"]; raw != nil && !ok {
		return fmt.Errorf("field content in WriteFileParamsJson: required")
	}
	if _, ok := raw["path"]; raw != nil && !ok {
		return fmt.Errorf("field path in WriteFileParamsJson: required")
	}
	type Plain WriteFileParamsJson
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	*j = WriteFileParamsJson(plain)
	return nil
}
